// HorusRec
// A recruitment task

import java.util.List;
import java.util.Optional;

public class HorusRecruitment {
    interface Structure {
        // zwraca dowolny element o podanym kolorze
        Optional<Block> findBlockByColor(String color);

        // zwraca wszystkie elementy z danego materiału
        List<Block> findBlocksByMaterial(String material);

        //zwraca liczbę wszystkich elementów tworzących strukturę
        int count();
    }

    public class Wall implements Structure {
        private List<Block> blocks;

        @Override
        public Optional<Block> findBlockByColor(String color) {
            return blocks.stream().filter(block -> block != null && block.getColor().equals(color)).findAny();
        }

        @Override
        public List<Block> findBlocksByMaterial(String material) {
            return blocks.stream().filter(block -> block != null && block.getMaterial().equals(material)).toList();
        }

        @Override
        public int count() {
            return blocks.size();
        }
    }

    interface Block {
        String getColor();
        String getMaterial();
    }

    interface CompositeBlock extends Block {
        List<Block> getBlocks();
    }
}
